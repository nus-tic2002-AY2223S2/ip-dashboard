[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"HappyM0ment"},"content":"//  DONE BY: A0227169X; ANG JIA JIN, GABRIEL  //","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"HappyM0ment"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"HappyM0ment"},"content":"    protected String by;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"HappyM0ment"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"HappyM0ment"},"content":"        super(description);","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"HappyM0ment"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"HappyM0ment"},"content":"    public String getBy() {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"HappyM0ment"},"content":"        return by;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"HappyM0ment"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"HappyM0ment"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"HappyM0ment"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"HappyM0ment"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"HappyM0ment"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"HappyM0ment"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"HappyM0ment":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"HappyM0ment"},"content":"//  DONE BY: A0227169X; ANG JIA JIN, GABRIEL  //","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"HappyM0ment"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"HappyM0ment"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"HappyM0ment"},"content":"    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"HappyM0ment"},"content":"    //  Helper method                                                                                              //","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"HappyM0ment"},"content":"    //  isNumber() method will check input if it is a number                                                       //","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"HappyM0ment"},"content":"    //  Returns TRUE if it is a number; FALSE if it is a String                                                    //","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"HappyM0ment"},"content":"    //  Logic:      Integer.parseInt will throw NumberFormatException if it is unable to convert input to Integer  //","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"HappyM0ment"},"content":"    //              Once NumberFormatException is caught, return FALSE as it is not a Number                       //","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"HappyM0ment"},"content":"    //  Reference:  https://stackoverflow.com/questions/1102891/how-to-check-if-a-string-is-numeric-in-java        //","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"HappyM0ment"},"content":"    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"HappyM0ment"},"content":"    public static boolean isNumber(String strToCheck) {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"HappyM0ment"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"HappyM0ment"},"content":"            Integer.parseInt(strToCheck);","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"HappyM0ment"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"HappyM0ment"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"HappyM0ment"},"content":"        catch(NumberFormatException exception)","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"HappyM0ment"},"content":"        {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"HappyM0ment"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"HappyM0ment"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"HappyM0ment"},"content":"    //  Helper method                                                                                //","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"HappyM0ment"},"content":"    //  checkInputForMarkAction() method will return TRUE if needs to execute Mark function          //","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"HappyM0ment"},"content":"    //  Assumption: Mark function will only contain input with 2 words; \u0027Mark\u0027 followed by a number  //","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"HappyM0ment"},"content":"    //              Anything besides that will be treated as a Task to be added to the list          //","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"HappyM0ment"},"content":"    //              E.G. \u0027Mark Dairy\u0027 - goes to List                                                 //","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"HappyM0ment"},"content":"    //              E.G. \u0027Mark 2\u0027 - perform Mark function                                            //","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"HappyM0ment"},"content":"    public static boolean checkInputForMarkAction(String load)","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"HappyM0ment"},"content":"    {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"HappyM0ment"},"content":"        String[] separatedLoad \u003d load.split(\" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"HappyM0ment"},"content":"        if (separatedLoad[0].equalsIgnoreCase(\"mark\") \u0026\u0026 separatedLoad.length \u003d\u003d 2 \u0026\u0026 isNumber(separatedLoad[1]))","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"HappyM0ment"},"content":"        {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"HappyM0ment"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"HappyM0ment"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"HappyM0ment"},"content":"        else","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"HappyM0ment"},"content":"        {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"HappyM0ment"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"HappyM0ment"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"HappyM0ment"},"content":"    //  Helper method                                                                                    //","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"HappyM0ment"},"content":"    //  checkInputForUnmarkAction() method will return TRUE if needs to execute Unmark function          //","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"HappyM0ment"},"content":"    //  Assumption: Unmark function will only contain input with 2 Words; \u0027Unmark\u0027 followed by a number  //","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"HappyM0ment"},"content":"    //              Anything besides that will be treated as a Task to be added to the list              //","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"HappyM0ment"},"content":"    //              E.G. \u0027Unmark Dairy\u0027 - goes to List                                                   //","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"HappyM0ment"},"content":"    //              E.G. \u0027Unmark 2\u0027 - perform Unmark function                                            //","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"HappyM0ment"},"content":"    public static boolean checkInputForUnmarkAction(String load)","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"HappyM0ment"},"content":"    {","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"HappyM0ment"},"content":"        String[] separatedLoad \u003d load.split(\" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"HappyM0ment"},"content":"        if (separatedLoad[0].equalsIgnoreCase(\"unmark\") \u0026\u0026 separatedLoad.length \u003d\u003d 2 \u0026\u0026 isNumber(separatedLoad[1]))","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"HappyM0ment"},"content":"        {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"HappyM0ment"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"HappyM0ment"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"HappyM0ment"},"content":"        else","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"HappyM0ment"},"content":"        {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"HappyM0ment"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"HappyM0ment"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"HappyM0ment"},"content":"        //variable initialization","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"HappyM0ment"},"content":"        Scanner scanObj \u003d new Scanner(System.in); //scanner","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"HappyM0ment"},"content":"        var lists \u003d new ArrayList\u003cTask\u003e(); //string initialize Task arraylist","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"HappyM0ment"},"content":"/*        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"Hello from\\n\" + logo);*/","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"HappyM0ment"},"content":"        // Get input from user","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"HappyM0ment"},"content":"        String input \u003d scanObj.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"HappyM0ment"},"content":"        // Main loop of the programme; exit upon \"Bye\" input","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"HappyM0ment"},"content":"        while(!input.equals(\"bye\"))","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"HappyM0ment"},"content":"        {","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"HappyM0ment"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"HappyM0ment"},"content":"            if(input.equals(\"list\"))","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"HappyM0ment"},"content":"            {","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"HappyM0ment"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"HappyM0ment"},"content":"                for(int i \u003d 0; i \u003c lists.size(); i++)","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"HappyM0ment"},"content":"                {","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"HappyM0ment"},"content":"                    System.out.println(i+1 + \".\" + lists.get(i).toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"HappyM0ment"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"HappyM0ment"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"HappyM0ment"},"content":"            else if (checkInputForMarkAction(input))","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"HappyM0ment"},"content":"            {","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"HappyM0ment"},"content":"                //This condition checks if the Mark Action needs to be executed","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"HappyM0ment"},"content":"                //retrieve the index to be marked","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"HappyM0ment"},"content":"                String[] separatedReturn \u003d input.split(\" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"HappyM0ment"},"content":"                int indexInList \u003d Integer.parseInt(separatedReturn[1]) - 1 ;","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"HappyM0ment"},"content":"                //set Status of Task to Done","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"HappyM0ment"},"content":"                lists.get(indexInList).markAsDone();","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"HappyM0ment"},"content":"                //Print output as expected","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"HappyM0ment"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"HappyM0ment"},"content":"                System.out.println(lists.get(indexInList).toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"HappyM0ment"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"HappyM0ment"},"content":"            else if (checkInputForUnmarkAction(input))","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"HappyM0ment"},"content":"            {","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"HappyM0ment"},"content":"                //This condition checks if the Unmark Action needs to be executed","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"HappyM0ment"},"content":"                //retrieve the index to be unmarked","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"HappyM0ment"},"content":"                String[] separatedReturn \u003d input.split(\" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"HappyM0ment"},"content":"                int indexInList \u003d Integer.parseInt(separatedReturn[1]) - 1 ;","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"HappyM0ment"},"content":"                //set Status of Task to Undone","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"HappyM0ment"},"content":"                lists.get(indexInList).markAsUndone();","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"HappyM0ment"},"content":"                //Print output as expected","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"HappyM0ment"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"HappyM0ment"},"content":"                System.out.println(lists.get(indexInList).toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"HappyM0ment"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"HappyM0ment"},"content":"            else","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"HappyM0ment"},"content":"            {","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"HappyM0ment"},"content":"                //time to start adding DATELINES / TODOS / EVENTS","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"HappyM0ment"},"content":"                String[] separatedString \u003d input.split(\" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"HappyM0ment"},"content":"                if(separatedString[0].equalsIgnoreCase(\"deadline\"))","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"HappyM0ment"},"content":"                {","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"HappyM0ment"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"HappyM0ment"},"content":"                else if(separatedString[0].equalsIgnoreCase(\"event\"))","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"HappyM0ment"},"content":"                {","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"HappyM0ment"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"HappyM0ment"},"content":"                else","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"HappyM0ment"},"content":"                {","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"HappyM0ment"},"content":"                    //assuming not \"deadline\" \u0026 \"event\" means \"to-do\"","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"HappyM0ment"},"content":"                    Todo newTodo \u003d new Todo(input);","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"HappyM0ment"},"content":"                    lists.add(newTodo);","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"HappyM0ment"},"content":"                    System.out.println(\"added: \" + input);","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"HappyM0ment"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"HappyM0ment"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"HappyM0ment"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"HappyM0ment"},"content":"            input \u003d scanObj.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"HappyM0ment"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"HappyM0ment"},"content":"        // Motherhood Statement when bye is key-ed in","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"HappyM0ment"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"HappyM0ment"},"content":"        // End of programme","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HappyM0ment":157,"-":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"HappyM0ment"},"content":"//  DONE BY: A0227169X; ANG JIA JIN, GABRIEL  //","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"HappyM0ment"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"HappyM0ment"},"content":"    protected String start;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"HappyM0ment"},"content":"    protected String end;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"HappyM0ment"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"HappyM0ment"},"content":"        super(description);","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"HappyM0ment"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"HappyM0ment"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"HappyM0ment"},"content":"    public String getStart() {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"HappyM0ment"},"content":"        return start;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"HappyM0ment"},"content":"    public void setStart(String start) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"HappyM0ment"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"HappyM0ment"},"content":"    public String getEnd() {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"HappyM0ment"},"content":"        return end;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"HappyM0ment"},"content":"    public void setEnd(String end) {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"HappyM0ment"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"HappyM0ment"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"HappyM0ment"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"HappyM0ment"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to:\" + end + \")\";","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"HappyM0ment"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"HappyM0ment":36}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"HappyM0ment"},"content":"//  DONE BY: A0227169X; ANG JIA JIN, GABRIEL  //","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"HappyM0ment"},"content":"public class Task {","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"HappyM0ment"},"content":"    //  Attributes   //","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"HappyM0ment"},"content":"    protected String description;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"HappyM0ment"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"HappyM0ment"},"content":"    //  Constructor  //","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"HappyM0ment"},"content":"    public Task(String description) {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"HappyM0ment"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"HappyM0ment"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"HappyM0ment"},"content":"    //  getDescription() method will return the description of Task  //","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"HappyM0ment"},"content":"    //","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"HappyM0ment"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"HappyM0ment"},"content":"        return this.description; // returns the value stored in the description attribute","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"HappyM0ment"},"content":"    //  setDescription() method will change the description of Task  //","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"HappyM0ment"},"content":"    //","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"HappyM0ment"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"HappyM0ment"},"content":"        this.description \u003d newDescription; // changes the description with the new input","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"HappyM0ment"},"content":"    /////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"HappyM0ment"},"content":"    //  getTaskStatus() method will return the status of the Task  //","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"HappyM0ment"},"content":"    /////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"HappyM0ment"},"content":"    //","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"HappyM0ment"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"HappyM0ment"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"HappyM0ment"},"content":"    ////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"HappyM0ment"},"content":"    //  markAsDone() method will mark the current task object as done by changing the isDone to TRUE  //","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"HappyM0ment"},"content":"    ////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"HappyM0ment"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"HappyM0ment"},"content":"        this.isDone \u003d true; // converts isDone attribute to \u0027TRUE\u0027","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"HappyM0ment"},"content":"    ////////////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"HappyM0ment"},"content":"    //  markAsUndone() method will un-mark the current task object as undone by changing the isDone to FALSE  //","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"HappyM0ment"},"content":"    ////////////////////////////////////////////////////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"HappyM0ment"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"HappyM0ment"},"content":"        this.isDone \u003d false; // converts isDone attribute to \u0027FALSE\u0027","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"HappyM0ment"},"content":"    //  toString() method will print out Task\u0027s standard output  //","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"HappyM0ment"},"content":"    ///////////////////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"HappyM0ment"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"HappyM0ment"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"HappyM0ment"},"content":"        return \"[\" + this.getTaskStatus() + \"] \" + this.description;","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"HappyM0ment"},"content":"        // converts isDone attribute to \u0027FALSE\u0027","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"HappyM0ment"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"HappyM0ment":66}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"HappyM0ment"},"content":"//  DONE BY: A0227169X; ANG JIA JIN, GABRIEL  //","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"HappyM0ment"},"content":"////////////////////////////////////////////////","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"HappyM0ment"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"HappyM0ment"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"HappyM0ment"},"content":"        super(description);","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"HappyM0ment"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"HappyM0ment"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"HappyM0ment"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"HappyM0ment"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"HappyM0ment"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"HappyM0ment"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"HappyM0ment":14}}]
