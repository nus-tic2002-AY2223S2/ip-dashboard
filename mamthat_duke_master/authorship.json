[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"    protected String by;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"mamthat"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"mamthat"},"content":"        super(taskName);","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"mamthat"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"mamthat"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"mamthat"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"mamthat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"mamthat"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"mamthat":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"import java.util.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"mamthat"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"mamthat"},"content":"        printIntroductionGreeting();","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"mamthat"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"mamthat"},"content":"        while(true) {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"mamthat"},"content":"            System.out.print(\"Enter input : \");","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"mamthat"},"content":"            String userInput \u003d input.nextLine().trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"mamthat"},"content":"            switch (userInput) {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"mamthat"},"content":"                case \"list\":","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"mamthat"},"content":"                    printTasksList();","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"mamthat"},"content":"                    break;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"mamthat"},"content":"                case \"bye\":","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"mamthat"},"content":"                    printEndGreeting();","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"mamthat"},"content":"                    return;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"mamthat"},"content":"                default:","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"mamthat"},"content":"                    if(isTask(userInput)) {  ","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"mamthat"},"content":"                        if (isTaskExists(userInput) \u003d\u003d false) {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"mamthat"},"content":"                            Task task \u003d new Task(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"mamthat"},"content":"                            taskList.add(task);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"mamthat"},"content":"                            System.out.println(\"Item added\");","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"mamthat"},"content":"                        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"mamthat"},"content":"                            System.out.println(\"Item already exists. Please add another item.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"mamthat"},"content":"                        }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"mamthat"},"content":"                    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"mamthat"},"content":"                    if(userInput.contains(\"mark\") || userInput.contains(\"unmark\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"mamthat"},"content":"                        markOrUnmarkTask(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"mamthat"},"content":"                    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"mamthat"},"content":"                    ","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"mamthat"},"content":"                    if(userInput.contains(\"todo\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"mamthat"},"content":"                        setToDoTask(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"mamthat"},"content":"                    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"mamthat"},"content":"                    if(userInput.contains(\"deadline\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"mamthat"},"content":"                        setDeadlineTask(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"mamthat"},"content":"                    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"mamthat"},"content":"                    ","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"mamthat"},"content":"                    if(userInput.contains(\"event\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"mamthat"},"content":"                        setEventTask(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"mamthat"},"content":"                    }     ","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"mamthat"},"content":"                    if(userInput.contains(\"delete\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"mamthat"},"content":"                        removeTask(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"mamthat"},"content":"                    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"mamthat"},"content":"                ","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"mamthat"},"content":"                    break;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"mamthat"},"content":"    public static void printIntroductionGreeting() {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"mamthat"},"content":"        String borderLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"mamthat"},"content":"        String greetings \u003d \"Hello! I\u0027m Duke \\n\\tWhat can I do for you\";","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"mamthat"},"content":"        System.out.printf(\"\\t%s\\n\\t%s\\n\\t%s\\n\",borderLine, greetings, borderLine);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"mamthat"},"content":"    public static void printEndGreeting() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"mamthat"},"content":"        String borderLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"mamthat"},"content":"        String greetings \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"mamthat"},"content":"        System.out.printf(\"\\t%s\\n\\t%s\\n\\t%s\\n\",borderLine, greetings, borderLine);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"mamthat"},"content":"    public static boolean isNumeric(String taskNo) {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"mamthat"},"content":"        if (taskNo \u003d\u003d \" \") {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"mamthat"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"mamthat"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"mamthat"},"content":"            Integer.parseInt(taskNo);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"mamthat"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"mamthat"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"mamthat"},"content":"        return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"mamthat"},"content":"    public static Boolean isTask(String input) {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"mamthat"},"content":"        if(input.contains(\"list\") || input.contains(\"mark\") ","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"mamthat"},"content":"        || input.contains(\"unmark\") || input.contains(\"todo\")","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"mamthat"},"content":"        || input.contains(\"deadline\") || input.contains(\"event\") ","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"mamthat"},"content":"        || input.contains(\"delete\") || input.equals(\" \")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"mamthat"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"mamthat"},"content":"        return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"mamthat"},"content":"    public static boolean isTaskExists(String task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"mamthat"},"content":"        for(int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"mamthat"},"content":"            if(taskList.get(i).getTaskName().equalsIgnoreCase(task)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"mamthat"},"content":"                return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"mamthat"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"mamthat"},"content":"    private static void printTasksList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"mamthat"},"content":"        String borderLine \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"mamthat"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"mamthat"},"content":"        for(int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"mamthat"},"content":"            if(isTask(taskList.get(i).getTaskName())) {","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"mamthat"},"content":"                System.out.println(\"\\t \" + (i+1) + \". \" +taskList.get(i).toString()+ \"\\t\");","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"mamthat"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"mamthat"},"content":"    private static void printMarkOrUnmarkTask(Boolean status) {","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"mamthat"},"content":"        if(status \u003d\u003d true) {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"mamthat"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"mamthat"},"content":"    private static void markOrUnmarkTask(String userInput) {","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"mamthat"},"content":"        try{","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"mamthat"},"content":"            if(userInput.split(\" \", 2).length \u003e 1 \u0026\u0026 isNumeric(userInput.split(\" \", 2)[1]) \u003d\u003d false) {","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"mamthat"},"content":"                throw new DukeException();","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"mamthat"},"content":"            boolean status \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"mamthat"},"content":"            if(userInput.split(\" \", 2)[0].equals(\"mark\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"mamthat"},"content":"                status \u003d true;","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"mamthat"},"content":"            else {","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"mamthat"},"content":"                status \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"mamthat"},"content":"            int taskNo \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"mamthat"},"content":"            String borderLine \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"mamthat"},"content":"            System.out.println(borderLine);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"mamthat"},"content":"            for(int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"mamthat"},"content":"                if(i+1 \u003d\u003d taskNo) {","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"mamthat"},"content":"                    if(taskList.get(i).getStatus() !\u003d status) {","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"mamthat"},"content":"                        taskList.get(i).setStatus(status);","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"mamthat"},"content":"                        printMarkOrUnmarkTask(status);","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"mamthat"},"content":"                        System.out.println(\"\\t \" + taskList.get(i).toString()+ \"\\t\");","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"mamthat"},"content":"                    } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"mamthat"},"content":"                        System.out.println(\"\\tTask status is already set\");","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"mamthat"},"content":"                    }","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"mamthat"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"mamthat"},"content":"            System.out.println(borderLine);","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"mamthat"},"content":"        } catch(ArrayIndexOutOfBoundsException _exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"mamthat"},"content":"        } catch(DukeException exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"mamthat"},"content":"        } ","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"mamthat"},"content":"    private static void setToDoTask(String userInput) {","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"mamthat"},"content":"        try{","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"mamthat"},"content":"            String[] taskArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"mamthat"},"content":"            String taskName \u003d taskArray[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"mamthat"},"content":"            if(taskName \u003d\u003d \"\") ","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"mamthat"},"content":"                throw new DukeException();","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"mamthat"},"content":"            String borderLine \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"mamthat"},"content":"            System.out.println(borderLine); ","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"mamthat"},"content":"            for(int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"mamthat"},"content":"                if(taskList.get(i).taskName.equalsIgnoreCase(taskName)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"mamthat"},"content":"                    Task toDoTask \u003d new Todo(taskName, true);","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"mamthat"},"content":"                    toDoTask.setStatus(taskList.get(i).getStatus()); ","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"mamthat"},"content":"                    taskList.set(i, toDoTask);","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"mamthat"},"content":"                    printTaskUpdates(toDoTask.toString(), TaskUpdateEnum.UPDATE);    ","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"mamthat"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":173,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"mamthat"},"content":"            System.out.println(borderLine);","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"mamthat"},"content":"        } catch(ArrayIndexOutOfBoundsException _exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"mamthat"},"content":"        } catch(DukeException exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"mamthat"},"content":"        } ","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"mamthat"},"content":"    private static void setDeadlineTask(String userInput) {","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"mamthat"},"content":"        try{","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"mamthat"},"content":"            String[] taskArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"mamthat"},"content":"            String taskInputDetails \u003d taskArray[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"mamthat"},"content":"            if(taskInputDetails \u003d\u003d \"\") ","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"mamthat"},"content":"                throw new DukeException();","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"mamthat"},"content":"            String borderLine \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"mamthat"},"content":"            System.out.println(borderLine); ","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"mamthat"},"content":"            String[] taskDetails \u003d taskInputDetails.split(\"/\", 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"mamthat"},"content":"            String taskName \u003d taskDetails[0].trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"mamthat"},"content":"            String day \u003d taskDetails[1].split(\" \")[1].trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"mamthat"},"content":"            for(int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"mamthat"},"content":"                if(taskList.get(i).taskName.equalsIgnoreCase(taskName)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"mamthat"},"content":"                    Task deadlineTask \u003d new Deadline(taskName, day);","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"mamthat"},"content":"                    deadlineTask.setStatus(taskList.get(i).getStatus()); ","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"mamthat"},"content":"                    taskList.set(i, deadlineTask);","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"mamthat"},"content":"                    printTaskUpdates(deadlineTask.toString(), TaskUpdateEnum.UPDATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"mamthat"},"content":"                } ","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"mamthat"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"mamthat"},"content":"        } catch(ArrayIndexOutOfBoundsException _exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"mamthat"},"content":"        } catch(DukeException exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"mamthat"},"content":"        } ","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"mamthat"},"content":"    private static void setEventTask(String userInput) {","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"mamthat"},"content":"        try{","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"mamthat"},"content":"            String[] taskArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"mamthat"},"content":"            String taskInputDetails \u003d taskArray[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"mamthat"},"content":"            if(taskInputDetails \u003d\u003d \"\") ","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"mamthat"},"content":"                throw new DukeException();","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"mamthat"},"content":"            String borderLine \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"mamthat"},"content":"            System.out.println(borderLine); ","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"mamthat"},"content":"            String[] taskDetails \u003d taskInputDetails.split(\"/\", 3);","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"mamthat"},"content":"            String taskName \u003d taskDetails[0].trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"mamthat"},"content":"            String from \u003d taskDetails[1].trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"mamthat"},"content":"            String to \u003d taskDetails[2].trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"mamthat"},"content":"            for(int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"mamthat"},"content":"                if(taskList.get(i).taskName.equalsIgnoreCase(taskName)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":232,"author":{"gitId":"mamthat"},"content":"                    Task eventTask \u003d new Event(taskName, from, to);","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"mamthat"},"content":"                    eventTask.setStatus(taskList.get(i).getStatus()); ","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"mamthat"},"content":"                    taskList.set(i, eventTask);","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"mamthat"},"content":"                    printTaskUpdates(eventTask.toString(), TaskUpdateEnum.UPDATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":236,"author":{"gitId":"mamthat"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":237,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"mamthat"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2023-03-20"},{"lineNumber":240,"author":{"gitId":"mamthat"},"content":"        } catch(ArrayIndexOutOfBoundsException _exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"mamthat"},"content":"        } catch(DukeException exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"mamthat"},"content":"        } ","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"mamthat"},"content":"    private static void removeTask(String userInput) {","lastModifiedDate":"2023-03-20"},{"lineNumber":248,"author":{"gitId":"mamthat"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":249,"author":{"gitId":"mamthat"},"content":"            String[] taskArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"mamthat"},"content":"            String taskNumber \u003d taskArray[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":251,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":252,"author":{"gitId":"mamthat"},"content":"            if(taskNumber \u003d\u003d \"\") ","lastModifiedDate":"2023-03-20"},{"lineNumber":253,"author":{"gitId":"mamthat"},"content":"                throw new DukeException();","lastModifiedDate":"2023-03-20"},{"lineNumber":254,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":255,"author":{"gitId":"mamthat"},"content":"            int taskNo \u003d Integer.parseInt(userInput.split(\" \", 2)[1]); ","lastModifiedDate":"2023-03-20"},{"lineNumber":256,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":257,"author":{"gitId":"mamthat"},"content":"            for(int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":258,"author":{"gitId":"mamthat"},"content":"                if(i+1 \u003d\u003d taskNo) {","lastModifiedDate":"2023-03-20"},{"lineNumber":259,"author":{"gitId":"mamthat"},"content":"                    taskList.remove(i);","lastModifiedDate":"2023-03-20"},{"lineNumber":260,"author":{"gitId":"mamthat"},"content":"                    printTaskUpdates(taskList.get(i).toString(), TaskUpdateEnum.DELETE);","lastModifiedDate":"2023-03-20"},{"lineNumber":261,"author":{"gitId":"mamthat"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":262,"author":{"gitId":"mamthat"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":263,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":264,"author":{"gitId":"mamthat"},"content":"        } catch(ArrayIndexOutOfBoundsException _exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":265,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The task number cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":266,"author":{"gitId":"mamthat"},"content":"        } catch(DukeException exception) {","lastModifiedDate":"2023-03-20"},{"lineNumber":267,"author":{"gitId":"mamthat"},"content":"            System.out.println(\"☹ OOPS!!! The task number cannot be empty.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":268,"author":{"gitId":"mamthat"},"content":"        } ","lastModifiedDate":"2023-03-20"},{"lineNumber":269,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":270,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":271,"author":{"gitId":"mamthat"},"content":"    private static void printTaskUpdates(String taskDetails, TaskUpdateEnum updateType) {","lastModifiedDate":"2023-03-20"},{"lineNumber":272,"author":{"gitId":"mamthat"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":273,"author":{"gitId":"mamthat"},"content":"        if(updateType \u003d\u003d TaskUpdateEnum.UPDATE) {","lastModifiedDate":"2023-03-20"},{"lineNumber":274,"author":{"gitId":"mamthat"},"content":"            message \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-03-20"},{"lineNumber":275,"author":{"gitId":"mamthat"},"content":"        } else if(updateType \u003d\u003d TaskUpdateEnum.DELETE) {","lastModifiedDate":"2023-03-20"},{"lineNumber":276,"author":{"gitId":"mamthat"},"content":"            message \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-03-20"},{"lineNumber":277,"author":{"gitId":"mamthat"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":278,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":279,"author":{"gitId":"mamthat"},"content":"        System.out.println(\"\\t\" + message + \"\\n\\t \" + taskDetails + \"\\n\\tNow you have \" + taskList.size() + \" in the list.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mamthat":277,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"    ","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"mamthat"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"mamthat":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"public class Event extends Task{","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"    protected String from;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"mamthat"},"content":"    protected String to;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"mamthat"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"mamthat"},"content":"        super(taskName);","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mamthat"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"mamthat"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"mamthat"},"content":"    @Override ","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"mamthat"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"mamthat"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"mamthat"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"mamthat":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"public class Task {","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"    protected String taskName;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"mamthat"},"content":"    protected Boolean status;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"mamthat"},"content":"    public Task(){","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"mamthat"},"content":"        this(\"Default Task\");","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"mamthat"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"mamthat"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"mamthat"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"mamthat"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"mamthat"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"mamthat"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"mamthat"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"mamthat"},"content":"        return taskName;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"mamthat"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"mamthat"},"content":"        return status;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"mamthat"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"mamthat"},"content":"        return (status ? \"X\" : \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"mamthat"},"content":"    public void setItemName(String taskName) {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"mamthat"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"mamthat"},"content":"    public void setStatus(Boolean status) {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"mamthat"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"mamthat"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"mamthat":38}},{"path":"src/main/java/TaskUpdateEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"enum TaskUpdateEnum {","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"    UPDATE,","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"mamthat"},"content":"    DELETE, ","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"mamthat"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"mamthat":4}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"    protected boolean toDo;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"mamthat"},"content":"    public Todo(String taskName, boolean toDo) {","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"mamthat"},"content":"        super(taskName);","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"mamthat"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"mamthat"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"mamthat"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"mamthat"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"mamthat"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"mamthat"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"mamthat"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"mamthat":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mamthat"},"content":"read book","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"mamthat"},"content":"return book","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"mamthat"},"content":"buy bread","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"mamthat"},"content":"list","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"mamthat"},"content":"mark 2","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"mamthat"},"content":"list","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mamthat"},"content":"unmark 2","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"mamthat"},"content":"list","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"mamthat"},"content":"bye","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"mamthat":9}}]
