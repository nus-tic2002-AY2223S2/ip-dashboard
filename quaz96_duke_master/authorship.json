[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quaz96"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"quaz96"},"content":"    protected String by;","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"quaz96"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"quaz96"},"content":"        super(description);","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"quaz96"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"quaz96"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"quaz96"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"quaz96"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"quaz96"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"quaz96":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quaz96"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"quaz96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"quaz96"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"quaz96"},"content":"    public static void main(String[] args) throws DukeException{","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"quaz96"},"content":"        //Start of chatbot","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Hello! I\u0027m Duke, the chatbot\");","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"quaz96"},"content":"        //Create new array of tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"quaz96"},"content":"        //Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"quaz96"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"quaz96"},"content":"        //Create int count","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"quaz96"},"content":"        int countTasks \u003d 0;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"quaz96"},"content":"        boolean toRun \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"quaz96"},"content":"        //Take an input/command","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"quaz96"},"content":"        while(toRun) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"quaz96"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"quaz96"},"content":"            String command \u003d in.nextLine().trim().toLowerCase();","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"quaz96"},"content":"            String[] givenCommand \u003d command.split(\" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"quaz96"},"content":"            String firstCommand \u003d givenCommand[0];","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"quaz96"},"content":"            //check for any errors","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"quaz96"},"content":"           try {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"quaz96"},"content":"               switch(firstCommand) {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"quaz96"},"content":"                   case \"help\":","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"quaz96"},"content":"                       //if command is empty, call for other suggestions","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"quaz96"},"content":"                       help();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"quaz96"},"content":"                   case \"list\": /*Level 2*/","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"quaz96"},"content":"                       //Print out all the tasks in the list","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"quaz96"},"content":"                       lists(tasks, countTasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"quaz96"},"content":"                   case \"bye\":","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"quaz96"},"content":"                       //To exit the program","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"quaz96"},"content":"                       System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"quaz96"},"content":"                       toRun \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"quaz96"},"content":"                   case \"mark\": /* Level 3*/","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"quaz96"},"content":"                   case \"unmark\":","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"quaz96"},"content":"                       // to mark or not mark a certain task","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"quaz96"},"content":"                       String positionNo \u003d givenCommand[1].trim();","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"quaz96"},"content":"                       int digit \u003d Integer.parseInt(positionNo)-1; // from string to integer","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"quaz96"},"content":"                       boolean toMark \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"quaz96"},"content":"                       //catch any errors","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"quaz96"},"content":"                       try {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"quaz96"},"content":"                           if (firstCommand.equals(\"mark\")) {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"quaz96"},"content":"                               toMark \u003d true;","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"quaz96"},"content":"                               status(tasks, toMark, digit);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"quaz96"},"content":"                           } else if (firstCommand.equals(\"unmark\")) {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"quaz96"},"content":"                               status(tasks, toMark, digit);","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"quaz96"},"content":"                           }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"quaz96"},"content":"                       } catch (IndexOutOfBoundsException e) { //if number given\u003e countTasks","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"quaz96"},"content":"                           System.out.println(\"Please give a valid task number that is within the list\");","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"quaz96"},"content":"                       } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"quaz96"},"content":"                           System.out.println(\"Please give a task number to edit\");","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"quaz96"},"content":"                       }","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"quaz96"},"content":"                   case \"deadline\" :","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"quaz96"},"content":"                       String[] givenBy \u003d command.split(\"/by\"); // split the command at /by","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"quaz96"},"content":"                       String lastDay \u003d givenBy[1]; // get the due date/day","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"quaz96"},"content":"                       String deadLineTask \u003d givenBy[0].replace(\"deadline\", \"\").trim(); //remove deadline to get the task","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"quaz96"},"content":"                       Task newTask \u003d new Deadline(deadLineTask, lastDay);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"quaz96"},"content":"                       storeTask(tasks, newTask, countTasks); //stores the new task into the list of tasks","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"quaz96"},"content":"                       ++countTasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"quaz96"},"content":"                   case \"todo\" :","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"quaz96"},"content":"                       //String todoTask \u003d command.replace(\"todo\",\"\"); //remove todo to get the task","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"quaz96"},"content":"                       String[] splitTask \u003d command.split(\" \",2); //split by min 2 array","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"quaz96"},"content":"                       String todoTask \u003d splitTask[1]; //get description","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"quaz96"},"content":"                       Task newtodoTask \u003d new ToDo(todoTask);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"quaz96"},"content":"                       storeTask(tasks, newtodoTask, countTasks); //stores the new task into the list of tasks","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"quaz96"},"content":"                       ++countTasks;","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"quaz96"},"content":"                   case \"event\" :","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"quaz96"},"content":"                       String[] givenFrom \u003d command.split(\"/from\"); // split the command at /from","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"quaz96"},"content":"                       String eventTask \u003d givenFrom[0].replace(\"event\", \"\").trim();//remove event to get the task","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"quaz96"},"content":"                       String[] fromTo \u003d givenFrom[1].split(\"/to\"); //split at /to to get from and to","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"quaz96"},"content":"                       String fromEvent \u003d fromTo[0].trim(); //get the from","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"quaz96"},"content":"                       String toEvent \u003d fromTo[1].trim(); // get the to","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"quaz96"},"content":"                       Task newEventTask \u003d new Event(eventTask, fromEvent, toEvent);","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"quaz96"},"content":"                       storeTask(tasks, newEventTask, countTasks); //stores the new task into the list of tasks","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"quaz96"},"content":"                       ++countTasks;","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"quaz96"},"content":"                   case \"delete\" :","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"quaz96"},"content":"                       String[] splitDelete \u003d command.split(\" \",2); //split by min 2 array","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"quaz96"},"content":"                       String deleteTask \u003d splitDelete[1].trim(); //get the position","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"quaz96"},"content":"                       int selectedNum \u003d Integer.parseInt(deleteTask)-1; // from string to integer","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"quaz96"},"content":"                       deleteTask(tasks, selectedNum, countTasks); //deletes the selected task","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"quaz96"},"content":"                       --countTasks;","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"quaz96"},"content":"                       break;","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"quaz96"},"content":"                   default:","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"quaz96"},"content":"                       checkCommand(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"quaz96"},"content":"               }","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"quaz96"},"content":"           } catch (DukeException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"quaz96"},"content":"               System.out.println(\"☹ OOPS!!! The description of a \"  + firstCommand +\" cannot be empty!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"quaz96"},"content":"               continue;","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"quaz96"},"content":"           } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"quaz96"},"content":"                System.out.println(\"☹ OOPS!!! The description of a \"  + firstCommand +\" cannot be empty.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"quaz96"},"content":"                continue;","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"quaz96"},"content":"           } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"quaz96"},"content":"               System.out.println(\"☹ OOPS!!! The number is either greater than the number of tasks in the list.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"quaz96"},"content":"               continue;","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"quaz96"},"content":"           }","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"quaz96"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"quaz96"},"content":"    //store into array","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"quaz96"},"content":"    public static void storeTask(ArrayList\u003cTask\u003e yourTasks, Task newTask, int countTasks) {","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"quaz96"},"content":"        //yourTasks[countTasks] \u003d newTask;","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"quaz96"},"content":"        yourTasks.add(newTask);","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"quaz96"},"content":"        //print message","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"quaz96"},"content":"        addedTask(newTask, countTasks);","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"quaz96"},"content":"    //end of storing into array","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"quaz96"},"content":"    //error message START","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"quaz96"},"content":"    public static void checkCommand(String givenCommand) throws DukeException {","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"quaz96"},"content":"        String[] splitCommand \u003d givenCommand.split(\" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"quaz96"},"content":"        //check if description is empty","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"quaz96"},"content":"        if (givenCommand.contains(\"deadline\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"quaz96"},"content":"                //throw new DukeException(\"☹ OOPS!!! The description of a \" + givenCommand+ \" cannot be empty.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"quaz96"},"content":"                System.out.println(\"☹ OOPS!!! The description of a \"  + givenCommand +\" cannot be empty.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"quaz96"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"quaz96"},"content":"            //throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"quaz96"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"quaz96"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"quaz96"},"content":"    //error message END","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"quaz96"},"content":"    //messages START","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"quaz96"},"content":"    public static void help(){","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Hi, it looks like you did not type anything.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"You may try the following commands:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Enter List -\u003e to list all the tasks\");","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Enter Bye -\u003e to end the conversation\");","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"quaz96"},"content":"    public static void lists(ArrayList\u003cTask\u003e listOfTasks, int countTasks){","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"quaz96"},"content":"        int listNo\u003d0;","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"quaz96"},"content":"        for (int i \u003d 0; i \u003c countTasks; i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"quaz96"},"content":"            ++listNo;","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"quaz96"},"content":"            System.out.println(listNo + \". \" + listOfTasks.get(i).toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"quaz96"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"quaz96"},"content":"    public static void status(ArrayList\u003cTask\u003e chosenTask, boolean toMark, int digit) {","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"quaz96"},"content":"        if(toMark) {","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"quaz96"},"content":"            //chosenTask[digit].mark();","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"quaz96"},"content":"            chosenTask.get(digit).mark();","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"quaz96"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"quaz96"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"quaz96"},"content":"            //chosenTask[digit].notMark();","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"quaz96"},"content":"            chosenTask.get(digit).notMark();","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"quaz96"},"content":"            System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":165,"author":{"gitId":"quaz96"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":166,"author":{"gitId":"quaz96"},"content":"        toMark \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":167,"author":{"gitId":"quaz96"},"content":"        String list \u003d Integer.toString(digit+1);","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"quaz96"},"content":"        System.out.println(list + \". \" + chosenTask.get(digit));","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"quaz96"},"content":"    public static void addedTask(Task chosenTask, int count){","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Got it. I\u0027ve add this task:\");","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"quaz96"},"content":"        System.out.println(chosenTask);","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"quaz96"},"content":"        ++count;","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"quaz96"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e listTasks, int selectedNum, int totalTasks) {","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"quaz96"},"content":"        System.out.println(listTasks.get(selectedNum).toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"quaz96"},"content":"        listTasks.remove(selectedNum);","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"quaz96"},"content":"        --totalTasks;","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"quaz96"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"quaz96"},"content":"    //messages END","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"quaz96":179,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quaz96"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"quaz96"},"content":"    public DukeException (String errorMessage){","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"quaz96"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"quaz96":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quaz96"},"content":"public class Event extends Task{","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"quaz96"},"content":"    protected String from;","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"quaz96"},"content":"    protected String to;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"quaz96"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"quaz96"},"content":"        super(description);","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"quaz96"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"quaz96"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"quaz96"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"quaz96"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"quaz96"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"quaz96"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"quaz96":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quaz96"},"content":"public class Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"quaz96"},"content":"    protected String description;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"quaz96"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"quaz96"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"quaz96"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"quaz96"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"quaz96"},"content":"    public void mark() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"quaz96"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"quaz96"},"content":"    public void notMark() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"quaz96"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"quaz96"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"quaz96"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"quaz96"},"content":"            return \"[X]\";","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"quaz96"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"quaz96"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"quaz96"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"quaz96"},"content":"    //https://www.freecodecamp.org/news/java-array-methods-how-to-print-an-array-in-java/","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"quaz96"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"quaz96"},"content":"    public String toString(){","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"quaz96"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"quaz96"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"quaz96":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quaz96"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"quaz96"},"content":"      public ToDo(String description) {","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"quaz96"},"content":"        super(description);","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"quaz96"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"quaz96"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"quaz96"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"quaz96"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"quaz96"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"quaz96"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"quaz96":11}}]
