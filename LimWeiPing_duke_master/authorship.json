[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"    mainClassName \u003d \"nus.duke.Duke\"","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LimWeiPing":1,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"[T][ ] abc ","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"[T][X] bcd ","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"[T][X] sleep ","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"[T][ ] play mobile legend at night ","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"[D][X] read book (by:Nov 11 2020 at 11:00)","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"[E][X] exam TIC 2002 (from:May 2 2023 at 11:00 to:May 3 2023 at 11:00)","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"[E][X] coding (from:Jan 1 2021 at 11:00 to:Feb 2 2021 at 11:00)","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"[T][ ] 123 ","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"LimWeiPing":8}},{"path":"src/main/java/nus/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"public class Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"    protected Parser.taskEnum task;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    protected Boolean isExit \u003d false;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    protected LocalDateTime taskDeadline;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"    protected String findItem;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"    protected String statItem;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"        return this.isExit;","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"    public void displayAddTask(TaskList tl, Ui ui) {","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"                + ui.displayCommand() +","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"                \"\\nNow you have \" + tl.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"    public void displayDeleteTask(TaskList tl) {","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n    \"","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"                + tl.get(taskNumber - 1).toString() +","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"LimWeiPing"},"content":"                \"\\nNow you have \" + (tl.getSize() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"LimWeiPing"},"content":"    public void displayMarkTask(TaskList tl) {","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Noted. I\u0027ve \" + Parser.wordsInDescription[0] + \" task \" + taskNumber);","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"    public void unMarkCommand(TaskList tl) throws InvalidCodeException {","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"        if (taskNumber \u003d\u003d 0) {","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"There is no task 0.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"            throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"            tl.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"            displayMarkTask(tl);","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"        } catch (IndexOutOfBoundsException obe) {          // corner case: mark 0,  taskNumber \u003e taskArray.size","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Please give a valid task number that you want to unmark!\");","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"LimWeiPing"},"content":"    public void markCommand(TaskList tl) throws InvalidCodeException {","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"LimWeiPing"},"content":"        // ***************************","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"LimWeiPing"},"content":"        // level 3 mark/unmark feature","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"LimWeiPing"},"content":"        // ***************************","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"LimWeiPing"},"content":"        if (this.taskNumber \u003d\u003d 0) {","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"There is no task 0.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"LimWeiPing"},"content":"            throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"LimWeiPing"},"content":"            tl.get(this.taskNumber - 1).markAsDone();","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"LimWeiPing"},"content":"            displayMarkTask(tl);","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"LimWeiPing"},"content":"        } catch (IndexOutOfBoundsException obe) {          // corner case: mark 0,  taskNumber \u003e taskArray.size","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Please give a valid task number that you want to mark!\");","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"LimWeiPing"},"content":"    // ********************************************","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"LimWeiPing"},"content":"    // level 9 Add Individual Feature: C-Statistics","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"LimWeiPing"},"content":"    // ********************************************","lastModifiedDate":"2023-04-01"},{"lineNumber":71,"author":{"gitId":"LimWeiPing"},"content":"    public void displayStatistic(TaskList tl) {","lastModifiedDate":"2023-04-01"},{"lineNumber":72,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Please select the number to get different Statistics:\\n1. Stats for Tasks done.\\n2. Stats for Tasks not done.\\n\" +","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"LimWeiPing"},"content":"                \"3. Stats for Todo.\\n4. Stats for Deadline.\\n5. Stats for Events\");","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"LimWeiPing"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"LimWeiPing"},"content":"        this.statItem \u003d in.nextLine();","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"LimWeiPing"},"content":"        if (Integer.parseInt(statItem) \u003d\u003d 1) {","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"LimWeiPing"},"content":"            int stats \u003d 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c\u003d tl.getSize(); i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"LimWeiPing"},"content":"                if (TaskList.tasksArray.get(i - 1).isDone) {","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"LimWeiPing"},"content":"                    stats++;","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Number of Tasks done \u003d \" + stats);","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"LimWeiPing"},"content":"        } else if (Integer.parseInt(statItem) \u003d\u003d 2) {","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"LimWeiPing"},"content":"            int stats \u003d 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c\u003d tl.getSize(); i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"LimWeiPing"},"content":"                if (!TaskList.tasksArray.get(i - 1).isDone) {","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"LimWeiPing"},"content":"                    stats++;","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Number of Tasks not done \u003d \" + stats);","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"LimWeiPing"},"content":"        } else if (Integer.parseInt(statItem) \u003d\u003d 3) {","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"LimWeiPing"},"content":"            int stats \u003d 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c\u003d tl.getSize(); i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"LimWeiPing"},"content":"                if (TaskList.tasksArray.get(i - 1) instanceof ToDo) {","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"LimWeiPing"},"content":"                    stats++;","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Number of Todo Task \u003d \" + stats);","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"LimWeiPing"},"content":"        } else if (Integer.parseInt(statItem) \u003d\u003d 4) {","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"LimWeiPing"},"content":"            int stats \u003d 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c\u003d tl.getSize(); i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"LimWeiPing"},"content":"                if (TaskList.tasksArray.get(i - 1) instanceof Deadline) {","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"LimWeiPing"},"content":"                    stats++;","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Number of Deadline Task \u003d \" + stats);","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"LimWeiPing"},"content":"        } else if (Integer.parseInt(statItem) \u003d\u003d 5) {","lastModifiedDate":"2023-04-01"},{"lineNumber":109,"author":{"gitId":"LimWeiPing"},"content":"            int stats \u003d 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c\u003d tl.getSize(); i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"LimWeiPing"},"content":"                if (TaskList.tasksArray.get(i - 1) instanceof Event) {","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"LimWeiPing"},"content":"                    stats++;","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Number of Event Task \u003d \" + stats);","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"LimWeiPing"},"content":"    // **************************************************","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"LimWeiPing"},"content":"    // level 10 Add Individual Feature: C-DetectDuplicate","lastModifiedDate":"2023-04-01"},{"lineNumber":121,"author":{"gitId":"LimWeiPing"},"content":"    // **************************************************","lastModifiedDate":"2023-04-01"},{"lineNumber":122,"author":{"gitId":"LimWeiPing"},"content":"    public void detectDuplicates(TaskList tl) {","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"LimWeiPing"},"content":"        for (int i \u003d 0; i \u003c tl.getSize() - 1; i++ ) {","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"LimWeiPing"},"content":"            if (tl.get(i).description.equals(tl.get(tl.getSize() - 1).description)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"LimWeiPing"},"content":"                System.out.println(\"\\nImportant message: Duplicate task detected! Are you sure you want to add this task? (Y/N)\" );","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"LimWeiPing"},"content":"                Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"LimWeiPing"},"content":"                String answer \u003d in.nextLine().toUpperCase();","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"LimWeiPing"},"content":"                if (answer.equals(\"N\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"LimWeiPing"},"content":"                    tl.remove(tl.getSize()-1);","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Duplicate task is removed!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"LimWeiPing"},"content":"                } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Duplicate task is added!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"LimWeiPing"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws DukeException, IOException, InvalidCodeException {","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":142,"author":{"gitId":"LimWeiPing"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"LimWeiPing"},"content":"            throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":144,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"LimWeiPing"},"content":"        switch (task) {","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"LimWeiPing"},"content":"            // *********************","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"LimWeiPing"},"content":"            // level 1 bye feature","lastModifiedDate":"2023-04-01"},{"lineNumber":149,"author":{"gitId":"LimWeiPing"},"content":"            // *********************","lastModifiedDate":"2023-04-01"},{"lineNumber":150,"author":{"gitId":"LimWeiPing"},"content":"            case BYE:","lastModifiedDate":"2023-04-01"},{"lineNumber":151,"author":{"gitId":"LimWeiPing"},"content":"                this.isExit \u003d true;","lastModifiedDate":"2023-04-01"},{"lineNumber":152,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":153,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-04-01"},{"lineNumber":154,"author":{"gitId":"LimWeiPing"},"content":"            // level 2 list feature","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"LimWeiPing"},"content":"            case LIST:","lastModifiedDate":"2023-04-01"},{"lineNumber":157,"author":{"gitId":"LimWeiPing"},"content":"                for (int i \u003d 1; i \u003c tl.getSize() + 1; i++) {","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(i + \".\" + TaskList.tasksArray.get(i - 1).toString());","lastModifiedDate":"2023-04-01"},{"lineNumber":159,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":160,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":161,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":162,"author":{"gitId":"LimWeiPing"},"content":"            case MARK:","lastModifiedDate":"2023-04-01"},{"lineNumber":163,"author":{"gitId":"LimWeiPing"},"content":"                markCommand(tl);","lastModifiedDate":"2023-04-01"},{"lineNumber":164,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":165,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":166,"author":{"gitId":"LimWeiPing"},"content":"            case UNMARK:","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"LimWeiPing"},"content":"                unMarkCommand(tl);","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"LimWeiPing"},"content":"            // level 4 To-do feature","lastModifiedDate":"2023-04-01"},{"lineNumber":172,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-04-01"},{"lineNumber":173,"author":{"gitId":"LimWeiPing"},"content":"            case TODO:","lastModifiedDate":"2023-04-01"},{"lineNumber":174,"author":{"gitId":"LimWeiPing"},"content":"                if (taskDescription \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":175,"author":{"gitId":"LimWeiPing"},"content":"                    throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":176,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"LimWeiPing"},"content":"                tl.add(new ToDo(taskDescription));","lastModifiedDate":"2023-04-01"},{"lineNumber":178,"author":{"gitId":"LimWeiPing"},"content":"                displayAddTask(tl, ui);","lastModifiedDate":"2023-04-01"},{"lineNumber":179,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":180,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":181,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":182,"author":{"gitId":"LimWeiPing"},"content":"            // level 4 Deadline feature","lastModifiedDate":"2023-04-01"},{"lineNumber":183,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":184,"author":{"gitId":"LimWeiPing"},"content":"            case DEADLINE:","lastModifiedDate":"2023-04-01"},{"lineNumber":185,"author":{"gitId":"LimWeiPing"},"content":"                if (taskDescription \u003d\u003d null || taskDeadline \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":186,"author":{"gitId":"LimWeiPing"},"content":"                    throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":187,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":188,"author":{"gitId":"LimWeiPing"},"content":"                tl.add(new Deadline(taskDescription, taskDeadline));","lastModifiedDate":"2023-04-01"},{"lineNumber":189,"author":{"gitId":"LimWeiPing"},"content":"                displayAddTask(tl, ui);","lastModifiedDate":"2023-04-01"},{"lineNumber":190,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":191,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":192,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":193,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":194,"author":{"gitId":"LimWeiPing"},"content":"            // level 4 Event feature","lastModifiedDate":"2023-04-01"},{"lineNumber":195,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":196,"author":{"gitId":"LimWeiPing"},"content":"            case EVENT:","lastModifiedDate":"2023-04-01"},{"lineNumber":197,"author":{"gitId":"LimWeiPing"},"content":"                if (taskDescription \u003d\u003d null || start \u003d\u003d null || end \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":198,"author":{"gitId":"LimWeiPing"},"content":"                    throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":199,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":200,"author":{"gitId":"LimWeiPing"},"content":"                tl.add(new Event(taskDescription, start, end));","lastModifiedDate":"2023-04-01"},{"lineNumber":201,"author":{"gitId":"LimWeiPing"},"content":"                displayAddTask(tl, ui);","lastModifiedDate":"2023-04-01"},{"lineNumber":202,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":203,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":204,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":205,"author":{"gitId":"LimWeiPing"},"content":"            // level 5 Delete feature","lastModifiedDate":"2023-04-01"},{"lineNumber":206,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":207,"author":{"gitId":"LimWeiPing"},"content":"            case DELETE:","lastModifiedDate":"2023-04-01"},{"lineNumber":208,"author":{"gitId":"LimWeiPing"},"content":"                if (taskNumber \u003d\u003d 0) {","lastModifiedDate":"2023-04-01"},{"lineNumber":209,"author":{"gitId":"LimWeiPing"},"content":"                    throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":210,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":211,"author":{"gitId":"LimWeiPing"},"content":"                try {","lastModifiedDate":"2023-04-01"},{"lineNumber":212,"author":{"gitId":"LimWeiPing"},"content":"                    displayDeleteTask(tl);","lastModifiedDate":"2023-04-01"},{"lineNumber":213,"author":{"gitId":"LimWeiPing"},"content":"                    tl.remove(taskNumber - 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":214,"author":{"gitId":"LimWeiPing"},"content":"                } catch (IndexOutOfBoundsException obe) {          // corner case: mark 0,  taskNumber \u003e taskArray.size","lastModifiedDate":"2023-04-01"},{"lineNumber":215,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Please give a valid task number that you want to delete!\");","lastModifiedDate":"2023-04-01"},{"lineNumber":216,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":217,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":218,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":219,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":220,"author":{"gitId":"LimWeiPing"},"content":"            // level 9 Find feature","lastModifiedDate":"2023-04-01"},{"lineNumber":221,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":222,"author":{"gitId":"LimWeiPing"},"content":"            case FIND:","lastModifiedDate":"2023-04-01"},{"lineNumber":223,"author":{"gitId":"LimWeiPing"},"content":"                if (findItem !\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":224,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-04-01"},{"lineNumber":225,"author":{"gitId":"LimWeiPing"},"content":"                    for (int i \u003d 1; i \u003c\u003d tl.getSize(); i++) {","lastModifiedDate":"2023-04-01"},{"lineNumber":226,"author":{"gitId":"LimWeiPing"},"content":"                        if (TaskList.tasksArray.get(i - 1).description.contains(findItem)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":227,"author":{"gitId":"LimWeiPing"},"content":"                            System.out.println(i + \".\" + TaskList.tasksArray.get(i - 1).toString());","lastModifiedDate":"2023-04-01"},{"lineNumber":228,"author":{"gitId":"LimWeiPing"},"content":"                        }","lastModifiedDate":"2023-04-01"},{"lineNumber":229,"author":{"gitId":"LimWeiPing"},"content":"                    }","lastModifiedDate":"2023-04-01"},{"lineNumber":230,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":231,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":232,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":233,"author":{"gitId":"LimWeiPing"},"content":"            case STAT:","lastModifiedDate":"2023-04-01"},{"lineNumber":234,"author":{"gitId":"LimWeiPing"},"content":"                displayStatistic(tl);","lastModifiedDate":"2023-04-01"},{"lineNumber":235,"author":{"gitId":"LimWeiPing"},"content":"                break;","lastModifiedDate":"2023-04-01"},{"lineNumber":236,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":237,"author":{"gitId":"LimWeiPing"},"content":"            default:","lastModifiedDate":"2023-04-01"},{"lineNumber":238,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":239,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":240,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"LimWeiPing":240}},{"path":"src/main/java/nus/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    protected LocalDateTime byString;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"    public Deadline(String description, LocalDateTime deadLine) {","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"        super(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"        this.byString \u003d deadLine;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + byString.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 hh:mm\")) + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"LimWeiPing":19}},{"path":"src/main/java/nus/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    public static String filePath;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"        Duke.filePath \u003d filePath;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"    public void run() {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"LimWeiPing"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"LimWeiPing"},"content":"        // *********************","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"LimWeiPing"},"content":"        // level 1 bye feature","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"LimWeiPing"},"content":"        // *********************","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"LimWeiPing"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"LimWeiPing"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"            try {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"                ui.showLine();","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"                c.detectDuplicates(tasks);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"                Storage.save(tasks, filePath);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"LimWeiPing"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"LimWeiPing"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"LimWeiPing"},"content":"            } catch (InvalidCodeException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"LimWeiPing"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"LimWeiPing"},"content":"            } finally {","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"LimWeiPing"},"content":"                ui.showLine();","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"LimWeiPing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"LimWeiPing"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LimWeiPing":62,"-":1}},{"path":"src/main/java/nus/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    private String message;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    public static void checkDescriptionExist(int wordsDescription, int minWords) throws DukeException {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"        if (wordsDescription \u003c minWords) {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"            throw new DukeException(\"no description\");            // To handle exception: to-do","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"    public static void checkPartsRequirement(int partsDescription, int numberParts) throws IncompleteDescriptionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"        if (partsDescription \u003e numberParts) {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"            throw new IncompleteDescriptionException(\"incomplete description\");            // To handle exception: description more than 1 /by /from /to","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"    public static void checkTaskExist(int index, int min) throws NoTaskException {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"        if (index \u003d\u003d min) {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"            throw new NoTaskException(\"no task\");            // To handle exception: to-do","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"LimWeiPing":28}},{"path":"src/main/java/nus/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"        super(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 hh:mm\")) + \" to:\" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 hh:mm\")) + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"LimWeiPing":19}},{"path":"src/main/java/nus/duke/IncompleteDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"public class IncompleteDescriptionException extends DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    private String message;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    public IncompleteDescriptionException(String msg) {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"        super(msg);","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"LimWeiPing":12}},{"path":"src/main/java/nus/duke/InvalidCodeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"public class InvalidCodeException extends Throwable {","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    private String message;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    public InvalidCodeException(String message) {","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"LimWeiPing":8}},{"path":"src/main/java/nus/duke/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"public class NoTaskException extends DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    private String message;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    public NoTaskException(String msg) {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"        super(msg);","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"LimWeiPing":9}},{"path":"src/main/java/nus/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"public class Parser {","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    static String command \u003d null;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    static String[] wordsInDescription \u003d null;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"    static String[] partsInDescription \u003d null;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    public static void toDoCommand(String command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"       }","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseMarkCommand(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"        // level 5 ErrorHandle","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"            command.taskNumber \u003d Integer.parseInt(wordsInDescription[1]);","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"        } catch (NumberFormatException nfe) {                 // corner case: mark nonINTEGER","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"mark is a function key. Please indicate task number to be marked!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"        } catch (ArrayIndexOutOfBoundsException obe) {    // corner case: mark","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"mark feature must contain a task number\");","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseUnmarkCommand(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"LimWeiPing"},"content":"            command.taskNumber \u003d Integer.parseInt(wordsInDescription[1]);","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"LimWeiPing"},"content":"        } catch (NumberFormatException nfe) {              // to handle exception: mark nonINTEGER","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"unmark is a function key. Please indicate task number to be marked!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"LimWeiPing"},"content":"        } catch (ArrayIndexOutOfBoundsException obe) {  // to handle exception: mark","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"unmark feature must contain a task number\");","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseTodoCommand(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"        String taskJob \u003d \"\";","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkDescriptionExist(wordsInDescription.length, 2);  // handle exception: no Task","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"            // if there is to-do task: skip \"to-do\" and put description in taskArray","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c wordsInDescription.length; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"                taskJob +\u003d wordsInDescription[i] + \" \";","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"LimWeiPing"},"content":"            command.taskDescription \u003d taskJob;","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"LimWeiPing"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseDeadlineDateTime(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"LimWeiPing"},"content":"        // level 8 Dates and Times","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"LimWeiPing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"LimWeiPing"},"content":"            command.taskDeadline \u003d LocalDateTime.parse(partsInDescription[1].substring(1), formatter);","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"LimWeiPing"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"write the deadline in yyyy-MM-dd HH:mm format\");","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseDeadlineCommand(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":68,"author":{"gitId":"LimWeiPing"},"content":"        String taskJob \u003d new String();","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkDescriptionExist(wordsInDescription.length, 2); //handle exception: no deadline(/by)","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkPartsRequirement(partsInDescription.length, 2);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"LimWeiPing"},"content":"            // if there is deadline task: skip \"deadline\" and extract the task and by","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"LimWeiPing"},"content":"            int indexBy \u003d Arrays.asList(wordsInDescription).indexOf(\"/by\");","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c indexBy; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"LimWeiPing"},"content":"                taskJob +\u003d wordsInDescription[i] + \" \";","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkTaskExist(indexBy, 1);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"LimWeiPing"},"content":"            command.taskDescription \u003d taskJob;","lastModifiedDate":"2023-04-01"},{"lineNumber":79,"author":{"gitId":"LimWeiPing"},"content":"            parseDeadlineDateTime(command);","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"LimWeiPing"},"content":"        } catch (ArrayIndexOutOfBoundsException obe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"A deadline command must provide a deadline date (/by)!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"LimWeiPing"},"content":"        } catch (IncompleteDescriptionException ide) {","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"A deadline must contain only 1 task and only 1 deadline date (/by)!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"LimWeiPing"},"content":"        } catch (NoTaskException nte) {","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"There is no Task .\");","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"LimWeiPing"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseEventDateTime(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"LimWeiPing"},"content":"        // level 8 Dates and Times","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"LimWeiPing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"LimWeiPing"},"content":"            command.start \u003d LocalDateTime.parse(partsInDescription[1].substring(1, partsInDescription[1].length() - 1), formatter);","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"LimWeiPing"},"content":"            command.end \u003d LocalDateTime.parse(partsInDescription[2].substring(1), formatter);","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"LimWeiPing"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"write the event date \u0026 time in yyyy-MM-dd HH:mm format\");","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseEventCommand(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":105,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"LimWeiPing"},"content":"        // level 4 Event feature","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"LimWeiPing"},"content":"        // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"LimWeiPing"},"content":"        String taskJob \u003d \"\";","lastModifiedDate":"2023-04-01"},{"lineNumber":109,"author":{"gitId":"LimWeiPing"},"content":"        int indexFrom \u003d Arrays.asList(wordsInDescription).indexOf(\"/from\");","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkDescriptionExist(wordsInDescription.length, 2); //handle exception: event only)","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkPartsRequirement(partsInDescription.length, 3);","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"LimWeiPing"},"content":"            // if there is event duty: skip \"event\" and put the duty in taskArray","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c indexFrom; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"LimWeiPing"},"content":"                taskJob +\u003d wordsInDescription[i] + \" \";","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkTaskExist(indexFrom, 1);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"LimWeiPing"},"content":"            command.taskDescription \u003d taskJob;","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"LimWeiPing"},"content":"            parseEventDateTime(command);","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"LimWeiPing"},"content":"        } catch (ArrayIndexOutOfBoundsException obe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"An event must contain a start period (/from) and a end period (/to)!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"LimWeiPing"},"content":"        } catch (IncompleteDescriptionException ide) {","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"Events must contain 1 task, 1 /from and 1 /to\");","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"LimWeiPing"},"content":"        } catch (NoTaskException nte) {","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"There is no Task .\");","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"LimWeiPing"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"LimWeiPing"},"content":"    // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"LimWeiPing"},"content":"    // level 5 Delete feature","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"LimWeiPing"},"content":"    // *************************","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseDeleteCommand(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":135,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"LimWeiPing"},"content":"            command.taskNumber \u003d Integer.parseInt(wordsInDescription[1]);","lastModifiedDate":"2023-04-01"},{"lineNumber":137,"author":{"gitId":"LimWeiPing"},"content":"        } catch (NumberFormatException nfe) {                 // corner case: mark nonINTEGER","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"delete is a function key. Please indicate task number to be deleted!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"LimWeiPing"},"content":"        } catch (ArrayIndexOutOfBoundsException obe) {    // corner case: mark","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"delete feature must contain a task number\");","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"LimWeiPing"},"content":"    // *************************","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"LimWeiPing"},"content":"    // level 9 Find feature","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"LimWeiPing"},"content":"    // *************************","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"LimWeiPing"},"content":"    public static void parseFindCommand(Command command) {","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"LimWeiPing"},"content":"        String findItem \u003d new String();","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"LimWeiPing"},"content":"            DukeException.checkDescriptionExist(wordsInDescription.length, 2);  // handle exception: no word","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"LimWeiPing"},"content":"            // if there is find task: skip \"find\" and put description in taskArray","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"LimWeiPing"},"content":"            for (int i \u003d 1; i \u003c wordsInDescription.length; i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"LimWeiPing"},"content":"                findItem +\u003d wordsInDescription[i] + \" \";","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"LimWeiPing"},"content":"            command.findItem \u003d findItem;","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"LimWeiPing"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"☹ OOPS!!! The description of a FIND cannot be empty.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":158,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":160,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":161,"author":{"gitId":"LimWeiPing"},"content":"    // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":162,"author":{"gitId":"LimWeiPing"},"content":"    // level 6 ENUM","lastModifiedDate":"2023-04-01"},{"lineNumber":163,"author":{"gitId":"LimWeiPing"},"content":"    // *************************","lastModifiedDate":"2023-04-01"},{"lineNumber":164,"author":{"gitId":"LimWeiPing"},"content":"    public enum taskEnum {","lastModifiedDate":"2023-04-01"},{"lineNumber":165,"author":{"gitId":"LimWeiPing"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE, FIND, STAT","lastModifiedDate":"2023-04-01"},{"lineNumber":166,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"LimWeiPing"},"content":"    public static Command parse(String fullCommand) throws DukeException, InvalidCodeException {","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"LimWeiPing"},"content":"        Parser.command \u003d fullCommand;","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"LimWeiPing"},"content":"        Command c \u003d new Command();","lastModifiedDate":"2023-04-01"},{"lineNumber":172,"author":{"gitId":"LimWeiPing"},"content":"        Parser.wordsInDescription \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-04-01"},{"lineNumber":173,"author":{"gitId":"LimWeiPing"},"content":"        Parser.partsInDescription \u003d fullCommand.split(\"/by|/from|/to\");","lastModifiedDate":"2023-04-01"},{"lineNumber":174,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":175,"author":{"gitId":"LimWeiPing"},"content":"        //initialized an object for Enum task","lastModifiedDate":"2023-04-01"},{"lineNumber":176,"author":{"gitId":"LimWeiPing"},"content":"        Parser.taskEnum objectEnumTask \u003d null;","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"LimWeiPing"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":178,"author":{"gitId":"LimWeiPing"},"content":"            objectEnumTask \u003d Parser.taskEnum.valueOf(String.valueOf(taskEnum.valueOf(wordsInDescription[0].toUpperCase())));   // convert different types of values into string","lastModifiedDate":"2023-04-01"},{"lineNumber":179,"author":{"gitId":"LimWeiPing"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2023-04-01"},{"lineNumber":180,"author":{"gitId":"LimWeiPing"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-04-01"},{"lineNumber":181,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":182,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":183,"author":{"gitId":"LimWeiPing"},"content":"        if (objectEnumTask \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":184,"author":{"gitId":"LimWeiPing"},"content":"            throw new InvalidCodeException(\"Invalid code exception\");","lastModifiedDate":"2023-04-01"},{"lineNumber":185,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":186,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":187,"author":{"gitId":"LimWeiPing"},"content":"        c.task \u003d objectEnumTask;","lastModifiedDate":"2023-04-01"},{"lineNumber":188,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":189,"author":{"gitId":"LimWeiPing"},"content":"            switch (objectEnumTask) {","lastModifiedDate":"2023-04-01"},{"lineNumber":190,"author":{"gitId":"LimWeiPing"},"content":"                case BYE:","lastModifiedDate":"2023-04-01"},{"lineNumber":191,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"LimWeiPing"},"content":"                case MARK:","lastModifiedDate":"2023-04-01"},{"lineNumber":194,"author":{"gitId":"LimWeiPing"},"content":"                    parseMarkCommand(c);","lastModifiedDate":"2023-04-01"},{"lineNumber":195,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":196,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"LimWeiPing"},"content":"                case UNMARK:","lastModifiedDate":"2023-04-01"},{"lineNumber":198,"author":{"gitId":"LimWeiPing"},"content":"                    parseUnmarkCommand(c);","lastModifiedDate":"2023-04-01"},{"lineNumber":199,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":200,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":201,"author":{"gitId":"LimWeiPing"},"content":"                case TODO:","lastModifiedDate":"2023-04-01"},{"lineNumber":202,"author":{"gitId":"LimWeiPing"},"content":"                    parseTodoCommand(c);","lastModifiedDate":"2023-04-01"},{"lineNumber":203,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":204,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":205,"author":{"gitId":"LimWeiPing"},"content":"                case DEADLINE:","lastModifiedDate":"2023-04-01"},{"lineNumber":206,"author":{"gitId":"LimWeiPing"},"content":"                    parseDeadlineCommand(c);","lastModifiedDate":"2023-04-01"},{"lineNumber":207,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":208,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":209,"author":{"gitId":"LimWeiPing"},"content":"                case EVENT:","lastModifiedDate":"2023-04-01"},{"lineNumber":210,"author":{"gitId":"LimWeiPing"},"content":"                    parseEventCommand(c);","lastModifiedDate":"2023-04-01"},{"lineNumber":211,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":212,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":213,"author":{"gitId":"LimWeiPing"},"content":"                case DELETE:","lastModifiedDate":"2023-04-01"},{"lineNumber":214,"author":{"gitId":"LimWeiPing"},"content":"                    parseDeleteCommand(c);","lastModifiedDate":"2023-04-01"},{"lineNumber":215,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":216,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":217,"author":{"gitId":"LimWeiPing"},"content":"                case FIND:","lastModifiedDate":"2023-04-01"},{"lineNumber":218,"author":{"gitId":"LimWeiPing"},"content":"                    parseFindCommand(c);","lastModifiedDate":"2023-04-01"},{"lineNumber":219,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":220,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":221,"author":{"gitId":"LimWeiPing"},"content":"                case STAT:","lastModifiedDate":"2023-04-01"},{"lineNumber":222,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-03-25"},{"lineNumber":223,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"LimWeiPing"},"content":"                default:","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":226,"author":{"gitId":"LimWeiPing"},"content":"        return c;","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":228,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"LimWeiPing":229}},{"path":"src/main/java/nus/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.io.File;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"// *************************","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"// level 7 Save","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"// *************************","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"public class Storage {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"    /*","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"    String root \u003d System.getProperty(\"Users\");","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"    java.nio.file.Path path \u003d java.nio.file.Paths.get(root, \"weipinglim\", \"duke\", \"data\");","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"    boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"    */","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"    protected File filename;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"    // create a data file in filePath","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"        this.filename \u003d new File(filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"    public void loadTodoInStorage (String taskString,String task, ArrayList a) {","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"        if (taskString !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"LimWeiPing"},"content":"            ToDo td \u003d new ToDo(taskString);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"LimWeiPing"},"content":"            markStorageTaskIfDone(task, td);","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"LimWeiPing"},"content":"            a.add(td);","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"    public void markStorageTaskIfDone (String task, Task t) {","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"        if (task.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"            t.markAsDone();","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"    public void loadDeadlineInStorage  (String taskString, String task, ArrayList a) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"        if (taskString !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"            String[] partInString \u003d taskString.split(\"by:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"            String date \u003d partInString[1].substring(0, partInString[1].length() - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"            String taskJob \u003d partInString[0].substring(0, partInString[0].length() - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"LimWeiPing"},"content":"            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"MMM d yyyy \u0027at\u0027 hh:mm\");","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"LimWeiPing"},"content":"            SimpleDateFormat output \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027 \u0027HH:mm\");","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"LimWeiPing"},"content":"            Date d \u003d sdf.parse(date);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"LimWeiPing"},"content":"            String formattedTime \u003d output.format(d);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"LimWeiPing"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"LimWeiPing"},"content":"            LocalDateTime deadLine \u003d LocalDateTime.parse(formattedTime,formatter);","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"LimWeiPing"},"content":"            Deadline dl \u003d new Deadline(taskJob, deadLine);","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"LimWeiPing"},"content":"            markStorageTaskIfDone(task, dl);","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"LimWeiPing"},"content":"            a.add(dl);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"LimWeiPing"},"content":"    public void loadEventInStorage  (String taskString, String task, ArrayList a) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"LimWeiPing"},"content":"        if (taskString !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"LimWeiPing"},"content":"            String[] partInString \u003d taskString.split(\"from:|to:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"LimWeiPing"},"content":"            String taskJob \u003d partInString[0].substring(0, partInString[0].length() - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"LimWeiPing"},"content":"            String startDate \u003d partInString[1].substring(0, partInString[1].length() - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"LimWeiPing"},"content":"            String endDate \u003d partInString[2].substring(0, partInString[2].length() - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"LimWeiPing"},"content":"            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"MMM d yyyy \u0027at\u0027 hh:mm\");","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"LimWeiPing"},"content":"            SimpleDateFormat output \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027 \u0027HH:mm\");","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"LimWeiPing"},"content":"            Date start \u003d sdf.parse(startDate);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"LimWeiPing"},"content":"            Date end \u003d sdf.parse(endDate);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"LimWeiPing"},"content":"            String formattedStartTime \u003d output.format(start);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"LimWeiPing"},"content":"            String formattedEndTime \u003d output.format(end);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"LimWeiPing"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"LimWeiPing"},"content":"            LocalDateTime startLDT \u003d LocalDateTime.parse(formattedStartTime,formatter);","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"LimWeiPing"},"content":"            LocalDateTime endLDT \u003d LocalDateTime.parse(formattedEndTime,formatter);","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"LimWeiPing"},"content":"            Event e \u003d new Event(taskJob, startLDT, endLDT);","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"LimWeiPing"},"content":"            markStorageTaskIfDone(task, e);","lastModifiedDate":"2023-04-01"},{"lineNumber":81,"author":{"gitId":"LimWeiPing"},"content":"            a.add(e);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":84,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"LimWeiPing"},"content":"    public ArrayList load() throws DukeException, IOException, ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"LimWeiPing"},"content":"        Scanner s \u003d new Scanner(filename);","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"LimWeiPing"},"content":"        ArrayList a \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"LimWeiPing"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"LimWeiPing"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"LimWeiPing"},"content":"            String taskString \u003d task.substring(7);","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"LimWeiPing"},"content":"            String taskType \u003d String.valueOf(task.charAt(1));","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"LimWeiPing"},"content":"            switch (taskType) {","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"LimWeiPing"},"content":"                case \"T\":","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"LimWeiPing"},"content":"                    loadTodoInStorage(taskString,task, a);","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"LimWeiPing"},"content":"                case \"D\":","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"LimWeiPing"},"content":"                    loadDeadlineInStorage(taskString, task, a);","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"LimWeiPing"},"content":"                case \"E\":","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"LimWeiPing"},"content":"                    loadEventInStorage(taskString, task, a);","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"LimWeiPing"},"content":"                    break;","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"LimWeiPing"},"content":"                default:","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"LimWeiPing"},"content":"        return a;","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"LimWeiPing"},"content":"    public static void save(TaskList tl, String filePath) throws DukeException, IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"LimWeiPing"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"LimWeiPing"},"content":"        for (int i \u003d 1; i \u003c tl.getSize() + 1; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"LimWeiPing"},"content":"            fw.write(tl.tasksArray.get(i - 1).toString() + System.lineSeparator());","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"LimWeiPing"},"content":"        fw.close();","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"LimWeiPing":117}},{"path":"src/main/java/nus/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"public class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    protected String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    //constructor","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LimWeiPing":28}},{"path":"src/main/java/nus/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"public class TaskList {","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    protected static ArrayList\u003cTask\u003e tasksArray;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"    protected int size \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    public TaskList(ArrayList t) {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"        this.tasksArray \u003d new ArrayList\u003c\u003e((Collection) t);","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"        this.size \u003d tasksArray.size();","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"        return size;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"    public void add(ToDo todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"        tasksArray.add(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"        size++;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"    public void add(Deadline deadline) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"        tasksArray.add(deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"        size++;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"LimWeiPing"},"content":"    public void add(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"LimWeiPing"},"content":"        tasksArray.add(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"LimWeiPing"},"content":"        size++;","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"    public Task get(int taskNumber) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"        return tasksArray.get(taskNumber);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"        tasksArray.remove(tasksArray.get(i));","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"        size--;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"LimWeiPing":47}},{"path":"src/main/java/nus/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"        super(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"    //public ToDo(Task task) {","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    //    super(task.description);","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    //}","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"LimWeiPing":16}},{"path":"src/main/java/nus/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"public class Ui {","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"    protected String sentences;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    public Ui() {","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"        return \"Cannot load the file.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"        String newlogo \u003d \" __        __   _____\\n\"","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"            + \"|  |  __  |  | |  __ \\\\ \\n\"","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"            + \"\\\\  \\\\_/  \\\\_/  / | |__| | \\n\"","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"            + \" \\\\    __    /  |  ___/\\n\"","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"            + \"  \\\\__/  \\\\__/   |_|      creation®\\n\";","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"        //System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Hello from\\n\" + newlogo);","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Hello. This is Reminder created by WP.\\nWhat can i do for you?\");","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"LimWeiPing"},"content":"    public String readCommand() {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"LimWeiPing"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"LimWeiPing"},"content":"        this.sentences \u003d in.nextLine();","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"LimWeiPing"},"content":"        return sentences;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"    public String displayCommand() {","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"        String display \u003d \"\";","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"        for(int i \u003d 1; i \u003c Parser.wordsInDescription.length; i++) {","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"            display +\u003d Parser.wordsInDescription[i] + \" \";","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"        return display;","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"LimWeiPing"},"content":"    public void showLine() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"\\n_________________________________________\\n\");","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"LimWeiPing"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"LimWeiPing":56}},{"path":"src/test/java/nus/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"package nus.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"public class DukeTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"    public void testAddTask_shouldIncrementedTotalCount() {","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"        ArrayList a \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"        final TaskList list \u003d new TaskList(a);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"        final int initialNoOfTasks \u003d list.getSize();","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"        String description \u003d \"abc\";","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"        list.add(new ToDo (description));","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"        final int newNoOfTasks \u003d list.getSize();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"        assertEquals(initialNoOfTasks + 1, newNoOfTasks );","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"LimWeiPing"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"LimWeiPing"},"content":"    public void testRemoveTask_shouldDecrementedTotalCount() {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"LimWeiPing"},"content":"        ArrayList a \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"LimWeiPing"},"content":"        final TaskList list \u003d new TaskList(a);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"        String description \u003d \"abc\";","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"        final Task taskToRemove \u003d new ToDo(description);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"        list.add((ToDo) taskToRemove);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"        final int initialNoOfTasks \u003d list.getSize();","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"        list.remove(0);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"        final int newNoOfTasks \u003d list.getSize();","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"        assertEquals(initialNoOfTasks - 1, newNoOfTasks );","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"    ","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"LimWeiPing":48}}]
