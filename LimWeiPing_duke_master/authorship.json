[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"    protected String by;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"        super(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"        return this.by;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"LimWeiPing":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    public static void drawLine() {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"\\n_________________________________________\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    public static void checkDescriptionExist(int wordsDescription, int minWords) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"        if (wordsDescription \u003c minWords) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"            throw new DukeException(\"no description\");            // To handle exception: to-do","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"    public static void checkTaskExist(int index,int min) throws NoTaskException {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"        if (index \u003d\u003d min) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"            throw new NoTaskException(\"no task\");            // To handle exception: to-do","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"    public static void checkPartsRequirement(int partsDescription, int numberParts) throws IncompleteDescriptionException {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"        if (partsDescription \u003e numberParts) {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"            throw new IncompleteDescriptionException(\"incomplete description\");            // To handle exception: description more than 1 /by /from /to","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"LimWeiPing"},"content":"        String sentences;","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"LimWeiPing"},"content":"        // instantiate new empty ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"LimWeiPing"},"content":"        ArrayList\u003cTask\u003e tasksArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"LimWeiPing"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Hello. I\u0027m Duke.\\nWhat can i do for you?\");","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"LimWeiPing"},"content":"        // *********************","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"LimWeiPing"},"content":"        // level 1 bye feature","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"LimWeiPing"},"content":"        // *********************","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"LimWeiPing"},"content":"        // use .equals to compare string","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"LimWeiPing"},"content":"        // if bye then exit()","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"LimWeiPing"},"content":"        // other than bye than print the statement","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"LimWeiPing"},"content":"        do {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"LimWeiPing"},"content":"            sentences \u003d in.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"LimWeiPing"},"content":"            String[] wordsInSentences \u003d sentences.split(\" \");","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"LimWeiPing"},"content":"            // level 2 list feature","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"LimWeiPing"},"content":"            if (sentences.equals(\"list\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"LimWeiPing"},"content":"                drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"LimWeiPing"},"content":"                for (int i \u003d 1; i \u003c tasksArray.size() + 1; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(tasksArray.get(i - 1).toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"LimWeiPing"},"content":"                drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"LimWeiPing"},"content":"            // ***************************","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"LimWeiPing"},"content":"            // level 3 mark/unmark feature","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"LimWeiPing"},"content":"            // ***************************","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"LimWeiPing"},"content":"            else if (wordsInSentences[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"LimWeiPing"},"content":"                try {","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"LimWeiPing"},"content":"                    int taskNumber \u003d Integer.parseInt(wordsInSentences[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"LimWeiPing"},"content":"                    tasksArray.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LimWeiPing"},"content":"                }catch (NumberFormatException nfe) {                 // corner case: mark nonINTEGER","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"mark is a function key. Please indicate task number to be marked!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"LimWeiPing"},"content":"                } catch (ArrayIndexOutOfBoundsException obe) {    // corner case: mark","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"mark feature must contain a task number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"LimWeiPing"},"content":"                } catch (IndexOutOfBoundsException obe) {          // corner case: mark 0,  taskNumber \u003e taskArray.size","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Please give a valid task number that you want to mark!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"LimWeiPing"},"content":"            else if (wordsInSentences[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"LimWeiPing"},"content":"                try {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"LimWeiPing"},"content":"                        int taskNumber \u003d Integer.parseInt(wordsInSentences[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"LimWeiPing"},"content":"                        tasksArray.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"LimWeiPing"},"content":"                } catch (NumberFormatException nfe) {              // to handle exception: mark nonINTEGER","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"unmark is a function key. Please indicate task number to be marked!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"LimWeiPing"},"content":"                } catch (ArrayIndexOutOfBoundsException obe) {  // to handle exception: mark","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"unmark feature must contain a task number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"LimWeiPing"},"content":"                } catch (IndexOutOfBoundsException obe) {        // to handle exception:  taskNumber \u003e taskArray.size","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Please give a valid task number that you want to unmark!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"LimWeiPing"},"content":"            // level 4 To-do feature","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"LimWeiPing"},"content":"            // **********************","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"LimWeiPing"},"content":"            else if (wordsInSentences[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"LimWeiPing"},"content":"                // corner cases: to do, todo1,","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"LimWeiPing"},"content":"                String[] wordsInDescription \u003d sentences.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"LimWeiPing"},"content":"                String todo \u003d new String();","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"LimWeiPing"},"content":"                try {","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"LimWeiPing"},"content":"                    checkDescriptionExist(wordsInDescription.length, 2);  // handle exception: no Task","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"LimWeiPing"},"content":"                    // if there is to-do task: skip \"to-do\" and put description in taskArray","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"LimWeiPing"},"content":"                    for (int i \u003d 1; i \u003c wordsInDescription.length; i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"LimWeiPing"},"content":"                        todo +\u003d wordsInDescription[i] + \" \";","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"LimWeiPing"},"content":"                    }","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"LimWeiPing"},"content":"                    tasksArray.add(new ToDo(todo));","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"LimWeiPing"},"content":"                    drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"LimWeiPing"},"content":"                            + tasksArray.get(tasksArray.size() - 1).toString() +","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"LimWeiPing"},"content":"                            \"\\nNow you have \" + tasksArray.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"LimWeiPing"},"content":"                    drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"LimWeiPing"},"content":"                } catch (DukeException de){","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"LimWeiPing"},"content":"            // level 4 Deadline feature","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"LimWeiPing"},"content":"            else if (wordsInSentences[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"LimWeiPing"},"content":"                // corner case: deadline, deadline1, task \u003d check return book deadline,","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"LimWeiPing"},"content":"                String[] wordsInDescription \u003d sentences.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"LimWeiPing"},"content":"                String[] partsInDescription \u003d sentences.split(\"/by\");","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"LimWeiPing"},"content":"                try {","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"LimWeiPing"},"content":"                    checkDescriptionExist(wordsInDescription.length, 2); //handle exception: no deadline(/by)","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"LimWeiPing"},"content":"                    checkPartsRequirement(partsInDescription.length, 2);","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"LimWeiPing"},"content":"                    // if there is deadline task: skip \"deadline\" and extract the task and by","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"LimWeiPing"},"content":"                    int indexBy \u003d Arrays.asList(wordsInDescription).indexOf(\"/by\");","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"LimWeiPing"},"content":"                    String task \u003d new String();","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"LimWeiPing"},"content":"                    for (int i \u003d 1; i \u003c indexBy; i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"LimWeiPing"},"content":"                        task +\u003d wordsInDescription[i] + \" \";","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"LimWeiPing"},"content":"                    }","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"LimWeiPing"},"content":"                    checkTaskExist(indexBy, 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"LimWeiPing"},"content":"                    tasksArray.add(new Deadline(task, partsInDescription[1]));","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"LimWeiPing"},"content":"                    drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"LimWeiPing"},"content":"                            + tasksArray.get(tasksArray.size() - 1).toString() +","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"LimWeiPing"},"content":"                            \"\\nNow you have \" + tasksArray.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"LimWeiPing"},"content":"                    drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"LimWeiPing"},"content":"                } catch (ArrayIndexOutOfBoundsException obe) {","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"A deadline command must provide a deadline date (/by)!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"LimWeiPing"},"content":"                } catch (IncompleteDescriptionException ide) {","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"cannot give more than 2 deadline (/by)\");","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"LimWeiPing"},"content":"                } catch (NoTaskException nte) {","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"There is no Task .\");","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"LimWeiPing"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":155,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":157,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"LimWeiPing"},"content":"            // level 4 Event feature","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"LimWeiPing"},"content":"            // *************************","lastModifiedDate":"2023-02-05"},{"lineNumber":161,"author":{"gitId":"LimWeiPing"},"content":"            else if (wordsInSentences[0].equals(\"event\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"LimWeiPing"},"content":"                // private case: event, event1,","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"LimWeiPing"},"content":"                String[] wordsInDescription \u003d sentences.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"LimWeiPing"},"content":"                String[] partsInDescription \u003d sentences.split(\"/from|/to\");","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"LimWeiPing"},"content":"                int indexFrom \u003d Arrays.asList(wordsInDescription).indexOf(\"/from\");","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"LimWeiPing"},"content":"                try {","lastModifiedDate":"2023-02-05"},{"lineNumber":167,"author":{"gitId":"LimWeiPing"},"content":"                    checkDescriptionExist(wordsInDescription.length, 2); //handle exception: event only)","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"LimWeiPing"},"content":"                    checkPartsRequirement(partsInDescription.length, 3);","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"LimWeiPing"},"content":"                    // if there is event task: skip \"event\" and put the task in taskArray","lastModifiedDate":"2023-02-05"},{"lineNumber":170,"author":{"gitId":"LimWeiPing"},"content":"                    String task \u003d new String();","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"LimWeiPing"},"content":"                    for (int i \u003d 1; i \u003c indexFrom; i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"LimWeiPing"},"content":"                        task +\u003d wordsInDescription[i] + \" \";","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"LimWeiPing"},"content":"                    }","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"LimWeiPing"},"content":"                    checkTaskExist(indexFrom, 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"LimWeiPing"},"content":"                    tasksArray.add(new Event(task, partsInDescription[1], partsInDescription[2]));","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"LimWeiPing"},"content":"                    drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":177,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2023-02-05"},{"lineNumber":178,"author":{"gitId":"LimWeiPing"},"content":"                            + tasksArray.get(tasksArray.size() - 1).toString() +","lastModifiedDate":"2023-02-05"},{"lineNumber":179,"author":{"gitId":"LimWeiPing"},"content":"                            \"\\nNow you have \" + tasksArray.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":180,"author":{"gitId":"LimWeiPing"},"content":"                    drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":181,"author":{"gitId":"LimWeiPing"},"content":"                } catch (ArrayIndexOutOfBoundsException obe) {","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"An event must contain a start period (/from) and a end period (/to)!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":183,"author":{"gitId":"LimWeiPing"},"content":"                } catch (IncompleteDescriptionException ide) {","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"Events must contain 1 task, 1 /from and 1 /to\");","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"LimWeiPing"},"content":"                } catch (NoTaskException nte) {","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"There is no Task .\");","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"LimWeiPing"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"LimWeiPing"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"LimWeiPing"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":192,"author":{"gitId":"LimWeiPing"},"content":"            else {","lastModifiedDate":"2023-02-05"},{"lineNumber":193,"author":{"gitId":"LimWeiPing"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"LimWeiPing"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"LimWeiPing"},"content":"        } while (!sentences.equals(\"bye\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":196,"author":{"gitId":"LimWeiPing"},"content":"        drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":197,"author":{"gitId":"LimWeiPing"},"content":"        System.out.println(\"Bye. Hope to see you soon again!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":198,"author":{"gitId":"LimWeiPing"},"content":"        drawLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":202,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LimWeiPing":196,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"    private String message;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"LimWeiPing":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"    protected String start;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"    protected String end;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"        super(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"        return \"[E]\"  + super.toString() + \"(from:\" + start + \" to:\" + end + \")\";","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"LimWeiPing":14}},{"path":"src/main/java/IncompleteDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"public class IncompleteDescriptionException extends DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"    private String message;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    public IncompleteDescriptionException(String msg) {","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"        super(msg);","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"LimWeiPing":12}},{"path":"src/main/java/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"public class NoTaskException extends DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"    private String message;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"    public NoTaskException(String msg) {","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"        super(msg);","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"LimWeiPing":8}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"public class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"    protected String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"    //constructor","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"    public Task(String description){","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LimWeiPing"},"content":"    //get method","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LimWeiPing"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LimWeiPing"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LimWeiPing"},"content":"    public String toString(){","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"LimWeiPing"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LimWeiPing"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LimWeiPing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LimWeiPing"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LimWeiPing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LimWeiPing":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimWeiPing"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"LimWeiPing"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"LimWeiPing"},"content":"        super(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"LimWeiPing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"LimWeiPing"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"LimWeiPing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"LimWeiPing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"LimWeiPing"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"LimWeiPing":9}}]
