[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"    protected String afterBy;","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"    public Deadline(String description,String word) {","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"        super(description);","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"        this.afterBy \u003d word;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"    public String toString(){","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + afterBy + \")\";","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Haoxuan0405":10}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"        DukeInit.duke();","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"        HashMap\u003cString, enumCommand\u003e newMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"bye\", enumCommand.BYE);","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"list\", enumCommand.LIST);","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"mark\", enumCommand.MARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"unmark\", enumCommand.UNMARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"delete\", enumCommand.DELETE);","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"todo\", enumCommand.TODO);","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"deadline\", enumCommand.DEADLINE);","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Haoxuan0405"},"content":"        newMap.put(\"event\", enumCommand.EVENT);","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Haoxuan0405"},"content":"        String inputCommand, key;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Haoxuan0405"},"content":"        enumCommand enumCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Haoxuan0405"},"content":"        TasksList tasksList \u003d new TasksList();","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Haoxuan0405"},"content":"        whileLoop:","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Haoxuan0405"},"content":"        while (true) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Haoxuan0405"},"content":"            inputCommand \u003d DukeInit.inputCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Haoxuan0405"},"content":"            key \u003d DukeInit.keyCommand(inputCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Haoxuan0405"},"content":"            enumCommand \u003d newMap.get(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Haoxuan0405"},"content":"            try {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Haoxuan0405"},"content":"                if (enumCommand \u003d\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Haoxuan0405"},"content":"                    enumCommand \u003d enumCommand.UNKNOWN;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Haoxuan0405"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Haoxuan0405"},"content":"                if (enumCommand.equals(enumCommand.BYE)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Haoxuan0405"},"content":"                    DukeInit.Echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Haoxuan0405"},"content":"                    break whileLoop;","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Haoxuan0405"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Haoxuan0405"},"content":"                enumCommand.command(tasksList, inputCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Haoxuan0405"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Haoxuan0405"},"content":"                DukeInit.Echo(e.getMessage());","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Haoxuan0405":39,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Haoxuan0405":5}},{"path":"src/main/java/DukeInit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"public class DukeInit {","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"    public static void duke(){","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Haoxuan0405"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Haoxuan0405"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Haoxuan0405"},"content":"        String space \u003d \" \", line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(space + \"Hello! I\u0027m Duke\\n\" + space +\"What can I do for you?\");","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Haoxuan0405"},"content":"    public static String inputCommand() {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Haoxuan0405"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Haoxuan0405"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Haoxuan0405"},"content":"    public static void printList(ArrayList\u003cTask\u003e lists) {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Haoxuan0405"},"content":"        String space \u003d \" \", line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(space + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Haoxuan0405"},"content":"        int taskNum \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Haoxuan0405"},"content":"        for(Task list : lists){","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Haoxuan0405"},"content":"            taskNum ++;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Haoxuan0405"},"content":"            System.out.println(space + taskNum + \".\" + list.toString());","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Haoxuan0405"},"content":"    public static void Echo(String s) {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Haoxuan0405"},"content":"        String space \u003d \" \", line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(space + s);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Haoxuan0405"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Haoxuan0405"},"content":"    public static String keyCommand(String inputCommand){","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Haoxuan0405"},"content":"        return inputCommand.split(\" \",2)[0].trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Haoxuan0405"},"content":"    public static String restCommand(String inputCommand){","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Haoxuan0405"},"content":"        return inputCommand.split(\" \",2)[1].trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Haoxuan0405"},"content":"    public static int commandLength(String inputCommand){","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Haoxuan0405"},"content":"        return inputCommand.split(\" \",2).length;","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Haoxuan0405":52}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"    protected String from;","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"    public Event(String description, String from) {","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"        super(description);","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Haoxuan0405"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Haoxuan0405"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Haoxuan0405"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + from + \")\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Haoxuan0405":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"public class Task {","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"    protected String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Haoxuan0405"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Haoxuan0405"},"content":"        return description;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Haoxuan0405"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Haoxuan0405"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Haoxuan0405"},"content":"    public void Mark(){","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Haoxuan0405"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Haoxuan0405"},"content":"    public void unMark(){","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Haoxuan0405"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Haoxuan0405"},"content":"    // [X] return book","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Haoxuan0405"},"content":"    public String toString(){","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Haoxuan0405"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Haoxuan0405":30}},{"path":"src/main/java/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"public class TasksList {","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"    public ArrayList\u003cTask\u003e lists;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"    public TasksList(){","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"        this.lists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Haoxuan0405"},"content":"    public void taskAdd(Task task){","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Haoxuan0405"},"content":"        lists.add(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Haoxuan0405"},"content":"        DukeInit.Echo(\"Got it. I\u0027ve added this task: \\n  \" + task +","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Haoxuan0405"},"content":"                \"\\n Now you have \" + lists.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Haoxuan0405"},"content":"    public void mark(int index){","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Haoxuan0405"},"content":"        Task task \u003d lists.get(index);","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Haoxuan0405"},"content":"        task.Mark();","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Haoxuan0405"},"content":"        DukeInit.Echo(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Haoxuan0405"},"content":"    public void unmark(int index){","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Haoxuan0405"},"content":"        Task task \u003d lists.get(index);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Haoxuan0405"},"content":"        task.unMark();","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Haoxuan0405"},"content":"        DukeInit.Echo(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Haoxuan0405"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Haoxuan0405"},"content":"        Task task \u003d lists.get(index);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Haoxuan0405"},"content":"        lists.remove(index);","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Haoxuan0405"},"content":"        DukeInit.Echo(\"Noted. I\u0027ve removed this task:\\n  \" + task +","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Haoxuan0405"},"content":"                \"\\n Now you have \" + lists.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Haoxuan0405":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"    public Todo(String description){","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"        super(description);","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"    public String toString(){","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Haoxuan0405":8}},{"path":"src/main/java/enumCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoxuan0405"},"content":"public enum enumCommand {","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Haoxuan0405"},"content":"    BYE {","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand){","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Haoxuan0405"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Haoxuan0405"},"content":"    LIST{","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand){","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Haoxuan0405"},"content":"            DukeInit.printList(list.lists);","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Haoxuan0405"},"content":"    MARK{","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand) throws DukeException{","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Haoxuan0405"},"content":"            if(DukeInit.commandLength(inputCommand) \u003c 2){","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! Mark number can not be empty.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Haoxuan0405"},"content":"            int markNum \u003d Integer.parseInt(DukeInit.restCommand(inputCommand)) - 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Haoxuan0405"},"content":"            if(markNum \u003e\u003d list.lists.size()){","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! Please key in correct number!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Haoxuan0405"},"content":"            list.mark(markNum);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Haoxuan0405"},"content":"    UNMARK{","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand) throws DukeException{","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Haoxuan0405"},"content":"            if(DukeInit.commandLength(inputCommand) \u003c 2){","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! Unmark number can not be empty.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Haoxuan0405"},"content":"            int markNum \u003d Integer.parseInt(DukeInit.restCommand(inputCommand)) - 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Haoxuan0405"},"content":"            if(markNum \u003e\u003d list.lists.size()){","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! Please key in correct number!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Haoxuan0405"},"content":"            list.unmark(markNum);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Haoxuan0405"},"content":"    DELETE{","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand) throws DukeException{","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Haoxuan0405"},"content":"            if(DukeInit.commandLength(inputCommand) \u003c 2){","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! Deleted number can not be empty.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Haoxuan0405"},"content":"            int deleteNum \u003d Integer.parseInt(DukeInit.restCommand(inputCommand)) - 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Haoxuan0405"},"content":"            if(deleteNum \u003e\u003d list.lists.size()){","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! Please key in correct number!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Haoxuan0405"},"content":"            list.deleteTask(deleteNum);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Haoxuan0405"},"content":"    TODO{","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand) throws DukeException{","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Haoxuan0405"},"content":"            if(DukeInit.commandLength(inputCommand) \u003c 2){","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Haoxuan0405"},"content":"            Task todo \u003d new Todo(DukeInit.restCommand(inputCommand));","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Haoxuan0405"},"content":"            list.taskAdd(todo);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Haoxuan0405"},"content":"    DEADLINE{","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand) throws DukeException{","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Haoxuan0405"},"content":"            if(DukeInit.commandLength(inputCommand) \u003c 2){","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Haoxuan0405"},"content":"            String beforeBy,afterBy;","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Haoxuan0405"},"content":"            beforeBy \u003d DukeInit.restCommand(inputCommand).split(\"/by\")[0];","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Haoxuan0405"},"content":"            afterBy \u003d DukeInit.restCommand(inputCommand).split(\"/by\")[1];","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Haoxuan0405"},"content":"            Task deadline \u003d new Deadline(beforeBy,afterBy);","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Haoxuan0405"},"content":"            list.taskAdd(deadline);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Haoxuan0405"},"content":"    EVENT{","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand) throws DukeException{","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Haoxuan0405"},"content":"            if(DukeInit.commandLength(inputCommand) \u003c 2){","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Haoxuan0405"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Haoxuan0405"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Haoxuan0405"},"content":"            String beforeFrom,afterFrom;","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Haoxuan0405"},"content":"            beforeFrom \u003d DukeInit.restCommand(inputCommand).split(\"/from\",2)[0];","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Haoxuan0405"},"content":"            afterFrom \u003d DukeInit.restCommand(inputCommand).split(\"/from\",2)[1];","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Haoxuan0405"},"content":"            afterFrom \u003d afterFrom.replace(\"/to\",\"to:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Haoxuan0405"},"content":"            Task event \u003d new Event(beforeFrom,afterFrom);","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Haoxuan0405"},"content":"            list.taskAdd(event);","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Haoxuan0405"},"content":"    },","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Haoxuan0405"},"content":"    UNKNOWN{","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Haoxuan0405"},"content":"        public void command(TasksList list, String inputCommand) throws DukeException{","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Haoxuan0405"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Haoxuan0405"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Haoxuan0405"},"content":"    };","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Haoxuan0405"},"content":"    public abstract void command(TasksList list, String inputCommand) throws DukeException;","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Haoxuan0405"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Haoxuan0405":88}}]
